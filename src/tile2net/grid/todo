reminder about: https://shapely.readthedocs.io/en/latest/reference/shapely.remove_repeated_points.html

We can use something like the majority vote + confidence mask to force the labels of the pixels with low confidence into the same label as their neighbors starting from like 50 pixels away from the edge

add a changelog
we should have vecgrid.prediction and vecgrid.mask
we must dissolve before simplifying

stitch loader should still use threading within a process if a lot of small grid in the big tile


outdir not correctly being set


The user wants the end result
We should delete them by default and only keep it if explicitly passed


vecgrid.file.colored
vecgrid.padded.file.colored

previews are too slow

problem is, seggrid.broadcast.index implicates more tiles than just seggrid.index


Network preview
/tmp/tile2net/bRs07FIb0QB5n-8b/lines/preview/Lines-09a6f0fafc9acf0e-9c1419be84668cbe356eb631f0807484.png

seggrid.padded.infile

seggrid.broadcast.infile

filename hash based

python -m tile2net --location "boston common"    --outdir ./l=boston_common__zoom=20__segment.pad=0 --zoom 20 --segment.pad 0 --model.bs_val 8 --vector.length 8

python -m tile2net --location 'boston common' --name segment.pad=0 --segment.pad 0 --zoom 20 --model.bs_val 8 --vector.length 8
--location "boston common" --name segment.pad=0 --segment.pad 0 --zoom 20 --model.bs_val 8 --vector.length 8

python -m tile2net --location "boston common" --name pad=0 --segment.pad 0 --zoom 20 --model.bs_val 8 --vector.length 8
python -m tile2net --location "boston common" --name pad=1 --segment.pad 1 --zoom 20 --model.bs_val 4 --vector.length 8
python -m tile2net --location "boston common" --name pad=2 --segment.pad 2 --zoom 20 --model.bs_val 2 --vector.length 8
python -m tile2net --location "boston common" --name pad=3 --segment.pad 3 --zoom 20 --model.bs_val 1 --vector.length 8
python -m tile2net --location "boston common" --name pad=4 --segment.pad 4 --zoom 20 --model.bs_val 1 --vector.length 8


--location "boston common" --name pad=0 --segment.pad 0 --zoom 20 --model.bs_val 8 --vector.length 8

python -m tile2net \
  -l "Cambridge, MA" \
  -b 16 \
  -o ./cambridge \
  -v 8 \
  --no-cleanup


python -m tile2net -l "Cambridge, MA" --name pad=0 --segment.pad 0 --zoom 20 --model.bs_val 8 --vector.length 8
python -m tile2net -l "Cambridge, MA" --name pad=1 --segment.pad 1 --zoom 20 --model.bs_val 4 --vector.length 8
python -m tile2net -l "Cambridge, MA" --name pad=2 --segment.pad 2 --zoom 20 --model.bs_val 2 --vector.length 8
python -m tile2net -l "Cambridge, MA" --name pad=3 --segment.pad 3 --zoom 20 --model.bs_val 1 --vector.length 8
python -m tile2net -l "Cambridge, MA" --name pad=4 --segment.pad 4 --zoom 20 --model.bs_val 1 --vector.length 8